@using GinSki.Models
@using GinSki.MongoDB
@inject Inventory Inventory
@inject InventoryRental InventoryRental

<div class="cardActive">
    <div class="content1">
        <div class="row1">
            <p>На склонеㅤ</p>
            <b>@listActiveUsers.Count</b>    
        </div>

    </div>

    <div class="content2">
        
        <div class="tableHeader">
            
            <div style="width: 50px">
                №
            </div>

            <div style="width: 350px">
                ФИО⠀
            </div>

            <div style="width: 150px">
                Телефон⠀
            </div>

            <div style="width: 150px">
                Скипасс⠀
            </div>

            <div style="width: 150px">
                Кол-во снаряжения
            </div>


        </div>
        <div class="tableContent">
            
            @if (listActiveUsers != null)
            {
                @for(int i = 1; i <= listActiveUsers.Count; i++)
                {
                    <button class="btnRow">
                            
                        <div style="width: 50px">
                            <p>@i</p>
                        </div>
                            
                        <div class="boxFIO" style="width: 350px">
                            <p>@listActiveUsers[i-1].LName</p>ㅤ
                            <p>@listActiveUsers[i-1].FName</p>ㅤ
                            <p>@listActiveUsers[i-1].PName</p>
                        </div>

                        <div style="width: 150px">
                            <p>@listActiveUsers[i-1].Phone</p>
                        </div>

                        <div style="width: 150px">
                            <p>@CalculateDate(listActiveUsers[i-1].Skipass.EndDateTime, listActiveUsers[i-1].Skipass.StartDateTime)</p>
                        </div>

                        <div style="width: 150px">
                            <p>@listActiveUsers[i-1].listInventory.Count.ToString()</p>
                        </div>
                    </button>
                    <hr class="rounded">
                }
            }
        
           
        </div>
        
    </div>

</div>

@code {
    public String Name { get; set; }

   
    public Skipass skipass = new Skipass();


    public List<Client> listActiveUsers = new List<Client>();


    protected override void OnInitialized()
    {
        listActiveUsers = UserDbConnection.GetListClient().Where(x => x.listInventory.Count > 0).ToList();
        CheckUserInventory();
    }

    String CalculateDate(DateTime end, DateTime start)
    {
        TimeSpan dt = end - start;
        

        return dt.ToString();
    }
    
    void CheckUserInventory()
    {
        List<Client> users = UserDbConnection.GetListClient();

        if (users == null)
        {
            return;
        }

        foreach (var user in users)
        {
            if (user.listInventory != null)
            {
                for (int i = 0; i < user.listInventory.Count; i++)
                {
                    if (user.listInventory.Count != 0)
                    {
                        if (DateTime.Now > user.listInventory[i].EndArend)
                        {
                            var crntInventory = user.listInventory[i];
                            user.listInventory.Remove(user.listInventory[i]);
                            UserDbConnection.UpdateClient(user);
                            InventoryDbConnection.AddToDatabase(crntInventory);
                        }    
                    }
                }
            }
        }
    }

}